pluginManagement {
    def flutterSdkPath = System.getenv("FLUTTER_ROOT")

    if (flutterSdkPath == null || flutterSdkPath.isEmpty()) {
        try {
            def process = ["cmd", "/c", "where flutter"].execute()
            def output = process.text.trim()
            if (!output.isEmpty()) {
                flutterSdkPath = new File(output.split("\\r?\\n")[0]).getParentFile().getParent()
                println("Flutter localizado via PATH em: ${flutterSdkPath}")
            }
        } catch (Exception ignored) {
        }
    }

    if (flutterSdkPath == null || flutterSdkPath.isEmpty()) {
        flutterSdkPath = rootDir.toPath().resolve("..").resolve("..").resolve("flutter").toFile().absolutePath
        println("FLUTTER_ROOT n√£o definido. Usando fallback em: ${flutterSdkPath}")
    }

    includeBuild("${flutterSdkPath}/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version "8.6.0" apply false
    id "org.jetbrains.kotlin.android" version "2.1.0" apply false
    id "com.google.gms.google-services" version "4.4.2" apply false
}

include(":app")